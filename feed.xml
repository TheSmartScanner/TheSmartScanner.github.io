<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://www.thesmartscanner.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://www.thesmartscanner.com/" rel="alternate" type="text/html" /><updated>2023-05-29T18:45:48+00:00</updated><id>https://www.thesmartscanner.com/feed.xml</id><subtitle>SmartScanner is an AI-powered web vulnerability scanner for web application security testing.Download for free do website security scan find and fix vulnerabilities</subtitle><entry><title type="html">Secure Coding 101: How to Use Random Function</title><link href="https://www.thesmartscanner.com/blog/secure-coding-101-how-to-use-random-function" rel="alternate" type="text/html" title="Secure Coding 101: How to Use Random Function" /><published>2023-05-09T00:00:00+00:00</published><updated>2023-05-09T00:00:00+00:00</updated><id>https://www.thesmartscanner.com/blog/secure-coding-101-how-to-use-random-function-</id><content type="html" xml:base="https://www.thesmartscanner.com/blog/secure-coding-101-how-to-use-random-function">&lt;p&gt;Random numbers are everywhere on the web, and your security depends on them. Let’s see if you’re using them right.&lt;/p&gt;

&lt;p&gt;Random numbers play a critical role in web application security. They are used in session identifiers, passwords, cryptographic keys, and more. However, if not implemented securely, they can lead to vulnerabilities that attackers can exploit to gain unauthorized access to sensitive information.&lt;/p&gt;

&lt;h2 id=&quot;tldr&quot;&gt;TLDR&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Most random generators are not really random. They use math that looks random&lt;/li&gt;
  &lt;li&gt;Do not use &lt;code&gt;Math.random()&lt;/code&gt; in JavaScript or &lt;code&gt;random&lt;/code&gt; in Python&lt;/li&gt;
  &lt;li&gt;Use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Crypto_API&quot;&gt;&lt;code&gt;Web Crypto API&lt;/code&gt;&lt;/a&gt; in JavaScript, &lt;a href=&quot;https://nodejs.org/api/crypto.html&quot;&gt;&lt;code&gt;crypto&lt;/code&gt;&lt;/a&gt; module in NodeJs, and &lt;a href=&quot;https://docs.python.org/3/library/secrets.html&quot;&gt;&lt;code&gt;secrets&lt;/code&gt;&lt;/a&gt; in python&lt;/li&gt;
  &lt;li&gt;Do not try to implement your own random generation algorithm&lt;/li&gt;
  &lt;li&gt;Incorrect usage of secure random numbers can make your application vulnerable&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;how-random-functions-work&quot;&gt;How Random Functions work&lt;/h2&gt;
&lt;p&gt;There are two main types of Random Number Generators (RNGs): pseudo-random number generators (PRNGs) and true random number generators (TRNGs).&lt;/p&gt;

&lt;h3 id=&quot;pseudo-random-number-generators-prngs&quot;&gt;Pseudo-random Number Generators (PRNGs)&lt;/h3&gt;
&lt;p&gt;PRNGs are the most commonly used type of RNGs. They work by using an algorithm to generate a sequence of numbers that appear to be random. The algorithm takes an initial value as input and produces a series of numbers based on it.&lt;/p&gt;

&lt;p&gt;The common algorithms used in PRNGs are the &lt;a href=&quot;https://en.wikipedia.org/wiki/Mersenne_Twister&quot;&gt;Mersenne-Twister&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Linear_congruential_generator&quot;&gt;linear congruential generator (LCG)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;These algorithms get an initial number called &lt;code&gt;seed&lt;/code&gt;. They change it by adding previous random number, shifting, and doing XOR operators to generate the output. The output looks like a random number though it’s just an output of a formula.&lt;/p&gt;

&lt;p&gt;If you keep executing any PRNG, it will eventually generate the same numbers over and over. Any PRNG has a fixed length of numbers that can generate before starting over.&lt;/p&gt;

&lt;h3 id=&quot;true-random-number-generators-trngs&quot;&gt;True Random Number Generators (TRNGs)&lt;/h3&gt;
&lt;p&gt;TRNGs generate truly random numbers based on physical processes that are inherently random. These processes include atmospheric noise, radioactive decay, and thermal noise. TRNGs measure the physical process and convert it into a random number.&lt;/p&gt;

&lt;h2 id=&quot;random-function-vulnerabilities&quot;&gt;Random Function Vulnerabilities&lt;/h2&gt;
&lt;p&gt;The seed and random number generation algorithm both can have weaknesses.&lt;/p&gt;

&lt;h3 id=&quot;prediction&quot;&gt;Prediction&lt;/h3&gt;
&lt;p&gt;You can say predictability is the main vulnerability of weak random number generators. PRNGs are inherently predictable as they are based on a mathematical formula. So if you know the seed and last random number, you can predict the next random number. This can lead to severe vulnerabilities.&lt;/p&gt;

&lt;p&gt;For example, consider a forget password functionality that words based on a random token. If the token can be predicted, an attacker can reset the password of any user.&lt;/p&gt;

&lt;h3 id=&quot;collision&quot;&gt;Collision&lt;/h3&gt;
&lt;p&gt;Besides the predictability, Some random generators that have low quality produce duplicate values very often. This can increase the risk of collision.&lt;/p&gt;

&lt;p&gt;Consider an application that generates random session tokens for its users. The chances of producing duplicate session tokens are related to two factors:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Size of random space (length of session token)&lt;/li&gt;
  &lt;li&gt;Quality of the random selection&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Short-length tokens will have a higher chance of collisions. And bad random generator does not generate all possible values. This can lead to vulnerabilities where a user can see another user’s data.&lt;/p&gt;

&lt;h3 id=&quot;seed-leakage-or-manipulation&quot;&gt;Seed Leakage or Manipulation&lt;/h3&gt;
&lt;p&gt;Another vulnerability related to random number generators is choosing a weak seed. PRNG always generates the same sequence of numbers with the same initial seed value. If an attacker can find the used seed or manipulate it, he can easily generate same random numbers.&lt;/p&gt;

&lt;p&gt;In pratice, hackers use different methods to predict the next random number. Some methods may involve statistical analysis, while others may involve reverse-engineering the generator’s algorithm.&lt;/p&gt;

&lt;h2 id=&quot;how-to-use-secure-random-numbers&quot;&gt;How to Use Secure Random Numbers&lt;/h2&gt;
&lt;p&gt;Using cryptographically secure random number generation algorithms is the key to securely producing random numbers. These algorithms generate random numbers that are unpredictable and cannot be easily guessed by attackers. The output of these algorithms is resistant to brute-force attacks, and it’s statistically robust.
You should not try to implement your own one unless you know what you are doing. Instead, always use known to be secure random libraries.&lt;/p&gt;

&lt;p&gt;Let’s see a few examples of using secure random libraries in different programming languages.&lt;/p&gt;

&lt;h3 id=&quot;javascript&quot;&gt;Javascript&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;Math.random()&lt;/code&gt; function is not suitable for cryptographic purposes, as it is not truly random and can be predicted or manipulated by an attacker.&lt;/p&gt;

&lt;p&gt;To generate a secure random number in JavaScript, you can use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Crypto_API&quot;&gt;&lt;code&gt;Web Crypto API&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;Crypto.getRandomValues()&lt;/code&gt; method lets you get cryptographically strong random values. Here is an example code that generates a secure random number:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Javascript&quot;&gt;function generateRandomNumber() {  
  const array = new Uint32Array(1); // Create a 32-bit unsigned integer array  
  window.crypto.getRandomValues(array); // Fill the array with random values  
  return array[0]; // Return the first element of the array as the random number  
}  
 
console.log(generateRandomNumber()); // Output a random number between 0 and 4294967295
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;nodejs&quot;&gt;NodeJS&lt;/h3&gt;
&lt;p&gt;In NodeJS, the &lt;a href=&quot;https://nodejs.org/api/crypto.html&quot;&gt;&lt;code&gt;crypto&lt;/code&gt;&lt;/a&gt; module can be used to generate cryptographically secure random numbers. The following code sample illustrates the use of crypto module in generating a random number:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Javascript&quot;&gt;const crypto = require('crypto');  
 
function generateRandomNumber() {  
  const randomBytes = crypto.randomBytes(4); // Generate 4 random bytes  
  const hexValue = randomBytes.toString('hex'); // Convert the bytes to a hex string  
  const intValue = parseInt(hexValue, 16); // Convert the hex string to an integer  
  return intValue;  
}  
 
console.log(generateRandomNumber()); // Output a random number between 0 and 4294967295
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;python&quot;&gt;Python&lt;/h3&gt;
&lt;p&gt;In Python, the &lt;code&gt;random&lt;/code&gt; module can be used to generate random numbers. However, it is not cryptographically secure. Instead, you can use the &lt;a href=&quot;https://docs.python.org/3/library/secrets.html&quot;&gt;&lt;code&gt;secrets&lt;/code&gt;&lt;/a&gt; module to generate cryptographically secure random numbers. The following code sample illustrates the use of secrets module in generating a random number:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Python&quot;&gt;import secrets  
 
def generate_random_number():  
    random_number = secrets.randbits(32) # Generate a 32-bit random number  
    return random_number  
 
print(generate_random_number()) # Output a random number between 0 and 4294967295
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Random numbers in computers are mathematical formulas and predictable. Not every random number generator is suitable for cryptography and security usage. Random numbers are just one element in security system design and implementation. There are many other things like seed generation, key management, and overall security system design that are extremely important and hard to get right. The &lt;a href=&quot;https://www.crypto101.io/&quot;&gt;Crypto 101&lt;/a&gt; is a great place to start learning more about cryptography.&lt;/p&gt;</content><author><name></name></author><category term="Cryptography" /><category term="NodeJs" /><category term="Python" /><category term="JavaScript" /><category term="Random" /><summary type="html">Random numbers are everywhere on the web, and your security depends on them. Let’s see if you’re using them right.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.thesmartscanner.com/assets/img/secure-random-numbers.jpg" /><media:content medium="image" url="https://www.thesmartscanner.com/assets/img/secure-random-numbers.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">How AI and Machine Learning are Revolutionizing Web Security</title><link href="https://www.thesmartscanner.com/blog/how-ai-and-machine-learning-are-revolutionizing-web-security" rel="alternate" type="text/html" title="How AI and Machine Learning are Revolutionizing Web Security" /><published>2023-03-01T00:00:00+00:00</published><updated>2023-03-01T00:00:00+00:00</updated><id>https://www.thesmartscanner.com/blog/how-ai-and-machine-learning-are-revolutionizing-web-security</id><content type="html" xml:base="https://www.thesmartscanner.com/blog/how-ai-and-machine-learning-are-revolutionizing-web-security">&lt;p&gt;Right now, the digital age continues to evolve at such a rapid pace that what was once innovative and fashionable today might just end up a fad by tomorrow. However, what will never become obsolete are &lt;a href=&quot;https://www.youngwonks.com/blog/Basic-Guidelines-for-Internet-Security&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;online safety&lt;/a&gt; and web security.&lt;/p&gt;

&lt;p&gt;We all know that the internet is home to a vast amount of data and information, making it a prime target for cyberattacks. Just look at the stats: in 2022, there was a whopping &lt;a href=&quot;https://blog.checkpoint.com/2023/01/05/38-increase-in-2022-global-cyberattacks/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;38% increase in global attacks&lt;/a&gt; compared to 2021. To make matters worse, the average overall cost of data breaches in 2022 was &lt;a href=&quot;https://www.ibm.com/reports/data-breach&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;$4.35 million&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Fortunately for us, advancements in AI and machine learning technologies are revolutionizing &lt;a href=&quot;https://www.thesmartscanner.com/blog/3-reasons-why-any-website-security-is-important&quot;&gt;web security&lt;/a&gt;. These solutions are being used to detect and prevent cyber threats by analyzing patterns in user behavior and identifying anomalies that could be potential security breaches.&lt;/p&gt;

&lt;p&gt;By integrating these technologies, you can keep your websites and applications safe from unauthorized access, data breaches, and other security threats.&lt;/p&gt;

&lt;p&gt;Here are some ways in which AI and machine learning are transforming web security:&lt;/p&gt;

&lt;h2 id=&quot;threat-detection-and-prevention&quot;&gt;Threat Detection and Prevention&lt;/h2&gt;
&lt;p&gt;Through &lt;a href=&quot;https://www.vanta.com/resources/risk-assessment-101-working-backwards-from-the-controls&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;risk assessment&lt;/a&gt; and vulnerability management, AI and machine learning can help detect and prevent cyber attacks in real time. They analyze millions upon millions of lines of code and pieces of data to look for patterns and anomalies in user behavior and use this information to intercept security breaches before they happen.&lt;/p&gt;

&lt;p&gt;For example, AI-powered security solutions can monitor network traffic to identify unusual activity that could indicate a cyberattack. By pinpointing and flagging potential threats in real time, security teams can take immediate action to mitigate the risks and safeguard everything from their &lt;a href=&quot;https://andela.com/insights/key-skills-to-look-out-for-when-hiring-angular-developers/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;light web applications&lt;/a&gt; to content-heavy websites.&lt;/p&gt;

&lt;h2 id=&quot;malware-detection&quot;&gt;Malware Detection&lt;/h2&gt;
&lt;p&gt;Malware is a common threat that can infect a website or application, leading to data breaches and other security risks. AI and machine learning can help detect malware by analyzing patterns in the code and behavior of applications.&lt;/p&gt;

&lt;p&gt;For instance, machine learning algorithms can analyze the code of an application to identify malicious code that may have been inserted by an attacker. These algorithms can also identify patterns of behavior that are consistent with malware, such as attempts to access sensitive data or make unauthorized changes to the system.&lt;/p&gt;

&lt;h2 id=&quot;user-authentication&quot;&gt;User Authentication&lt;/h2&gt;
&lt;p&gt;Another solution that AI and machine learning can put forward is improved user authentication, which is a critical aspect of web security. By analyzing patterns in user behavior, these technologies can identify fraudulent login attempts and other suspicious activity.&lt;/p&gt;

&lt;p&gt;Take this, for instance: you can employ machine learning algorithms to analyze user behavior, such as the time of day they typically access the system, the device they use, and the location from which they access the system. These algorithms can then use this data to identify anomalies that could indicate a fraudulent login attempt and prompt additional authentication steps, such as multi-factor authentication.&lt;/p&gt;

&lt;h2 id=&quot;fraud-detection&quot;&gt;Fraud Detection&lt;/h2&gt;
&lt;p&gt;Fraud is a significant problem for websites and applications that process financial transactions. Fortunately, you can use AI and machine learning to detect fraud by analyzing patterns in user behavior and identifying anomalies that could indicate fraudulent activity.&lt;/p&gt;

&lt;p&gt;For instance, machine learning algorithms can analyze data from financial transactions to find patterns that are consistent with fraud, such as unusually large transactions or purchases from unfamiliar locations. By detecting and flagging potential fraud activity, these algorithms can help prevent huge financial losses and protect sensitive data from ending up in the wrong hands.&lt;/p&gt;

&lt;h2 id=&quot;predictive-analysis&quot;&gt;Predictive Analysis&lt;/h2&gt;
&lt;p&gt;AI and machine learning can also be used to predict potential security risks and prevent them before they even happen. These technologies can analyze your historical data to identify patterns and trends that may indicate potential security breaches.&lt;/p&gt;

&lt;p&gt;For example, predictive analytics algorithms can analyze data from previous security breaches to identify common patterns and trends. Once they’ve identified these patterns, security professionals can take over and set up proactive measures to prevent similar attacks from happening again in the future.&lt;/p&gt;

&lt;h2 id=&quot;optimized-data-centers&quot;&gt;Optimized Data Centers&lt;/h2&gt;
&lt;p&gt;AI and machine learning can also optimize and monitor numerous essential data center processes, including backup power, cooling filters, power consumption, internal temperatures, and bandwidth usage. AI and machine learning’s calculative powers and continuous monitoring capabilities offer insights into what values might improve the efficiency and security of hardware and infrastructure.&lt;/p&gt;

&lt;p&gt;AI and machine learning can also lower the cost of hardware maintenance by alerting you when equipment needs to be fixed. These alerts provide you with the opportunity to repair your equipment before it suffers more serious damage.&lt;/p&gt;

&lt;h2 id=&quot;artificial-intelligence-and-machine-learning-for-safer-websites-and-applications&quot;&gt;Artificial Intelligence and Machine Learning for Safer Websites and Applications&lt;/h2&gt;
&lt;p&gt;As the threat of cyberattacks grows, AI and machine learning technologies will continue to transform web security by enabling security professionals and developers to detect and prevent cyber threats in real time, improve user authentication, and predict potential security risks, among other things.&lt;/p&gt;

&lt;p&gt;Sooner rather than later, these technologies will become increasingly important in keeping websites and applications safe and secure against cyberattacks. That’s why it’s so important for you to stay up-to-date with the latest advancements in AI and machine learning for web security.&lt;/p&gt;

&lt;p&gt;For more insights and stories about cybersecurity, check out &lt;a href=&quot;https://www.thesmartscanner.com/blog/&quot;&gt;The SmartScanner’s Blog&lt;/a&gt; today!&lt;/p&gt;</content><author><name>Myrtle Bautista</name></author><category term="AI" /><category term="Risk" /><category term="Malware" /><category term="Authentication" /><category term="Fraud" /><summary type="html">Right now, the digital age continues to evolve at such a rapid pace that what was once innovative and fashionable today might just end up a fad by tomorrow. However, what will never become obsolete are online safety and web security.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.thesmartscanner.com/assets/img/ai-security.jpg" /><media:content medium="image" url="https://www.thesmartscanner.com/assets/img/ai-security.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Security Testing of WebSites Using JavaScript</title><link href="https://www.thesmartscanner.com/blog/security-testing-of-websites-using-javascript" rel="alternate" type="text/html" title="Security Testing of WebSites Using JavaScript" /><published>2023-02-15T00:00:00+00:00</published><updated>2023-02-15T00:00:00+00:00</updated><id>https://www.thesmartscanner.com/blog/security-testing-of-websites-using-javascript-</id><content type="html" xml:base="https://www.thesmartscanner.com/blog/security-testing-of-websites-using-javascript">&lt;p&gt;These days websites without JavaScript are rare. According to &lt;a href=&quot;https://w3techs.com/technologies/overview/javascript_library&quot;&gt;w3techs&lt;/a&gt;, more than 80% of websites use at least one JavaScript library. So for penetration testing you should execute and run JavaScripts on web pages to find all functionalities and attack vectors like bakcned APIs.&lt;/p&gt;

&lt;p&gt;SmartScanner already has an javascript evaluation engine for running JavaScripts. In version 1.16 and 1.17 we completed the support for testing REST APIs. We added capability of identifying and testing requests sent with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API&quot;&gt;Fetch&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt;XMLHttpRequest&lt;/a&gt; APIs with any HTTP methods. These APIs are backbone of any AJAX libraries like jQuery and axios.&lt;/p&gt;

&lt;p&gt;All these new features and enhancements combined with our JavaScript evaluation engine made SmartScanner capable of automated vulnerability finding in any web application. No matter what technology your website is using; a Jamstack application, a single page application (SPA) or a modern reactive application built with ReactJS, Angular, Vue or Svelte. Just enter the URL, SmartScanner automatically tests and finds security vulnerablilities!&lt;/p&gt;

&lt;p&gt;We also made huge changes in our application architecture that resulted in many improvements like, speed and memory optimizations. But a few bugs could find the chance to escape behind these changes! In version 1.18, we focused on polishing features and fixing broken things.&lt;/p&gt;

&lt;p&gt;Now, we are excited to announce release of SmartScanner version 1.18, smarter and sharper than ever.&lt;/p&gt;

&lt;p&gt;And that’s not all! &lt;a href=&quot;/vulnerability-list/insecure-inline-frame&quot;&gt;Insecure Inline Frame&lt;/a&gt;, &lt;a href=&quot;/vulnerability-list/user-controllable-url&quot;&gt;User Controllable URL&lt;/a&gt; and &lt;a href=&quot;/vulnerability-list/unicode-transformation-issue&quot;&gt;Unicode Transformation Issue&lt;/a&gt; are new tests we’ve added with many XSS and SQLI improvements in version 1.18. Download and check it out!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/download&quot;&gt;Download SmartScanner free&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Read the &lt;a href=&quot;/docs/changelog&quot;&gt;changelog&lt;/a&gt; for details of new changes.&lt;/p&gt;</content><author><name></name></author><category term="Release" /><category term="JavaScript" /><category term="AJAX" /><category term="React" /><category term="Vue" /><category term="Fetch" /><category term="Axios" /><category term="Angular" /><category term="jQuery" /><category term="Svelte" /><summary type="html">React, AJAX, and Testing REST APIs</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.thesmartscanner.com/assets/img/smartscanner-v1-18.png" /><media:content medium="image" url="https://www.thesmartscanner.com/assets/img/smartscanner-v1-18.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">3 reasons why any website’s security is important</title><link href="https://www.thesmartscanner.com/blog/3-reasons-why-any-website-security-is-important" rel="alternate" type="text/html" title="3 reasons why any website’s security is important" /><published>2023-01-02T00:00:00+00:00</published><updated>2023-01-02T00:00:00+00:00</updated><id>https://www.thesmartscanner.com/blog/3-reasons-why-any-website-security-is-important-</id><content type="html" xml:base="https://www.thesmartscanner.com/blog/3-reasons-why-any-website-security-is-important">&lt;p&gt;You might think that security is important but only for big companies. This article is going to change your mind.&lt;/p&gt;

&lt;h2 id=&quot;hacked-website-can-affect-your-audience&quot;&gt;Hacked website can affect your audience&lt;/h2&gt;

&lt;p&gt;Security is critical as long as you have any visitor on your website (actually, security is vital even if you don’t have any visitor at all, you’ll see!).&lt;/p&gt;

&lt;p&gt;Either recruiters on your personal project portfolio website or customers on your online shopping platform, it doesn’t matter who you are targeting on your website. Any of your website visitors can be targeted by hackers as well if you don’t make your website secure.&lt;/p&gt;

&lt;p&gt;Your website can have many vulnerabilities, and any of them would be sufficient for hackers to compromise your website to use it against your visitors. Security vulnerabilities like &lt;a href=&quot;/vulnerability-list/cross-site-scripting&quot;&gt;XSS&lt;/a&gt;, &lt;a href=&quot;/vulnerability-list/sql-injection&quot;&gt;SQLI&lt;/a&gt; or &lt;a href=&quot;/vulnerability-list/local-file-inclusion&quot;&gt;File Inclusions&lt;/a&gt; allow hackers to take control over what your visitors see on your website. These vulnerabilities can exist on any page, or they might be in your web server’s configurations or even in an outdated WordPress plugin.&lt;/p&gt;

&lt;h3 id=&quot;why-should-hackers-hack-my-website&quot;&gt;Why should hackers hack my website?&lt;/h3&gt;

&lt;p&gt;Hackers take over your website to do any of below malicious tasks.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://thehackernews.com/2022/04/over-16500-sites-hacked-to-distribute.html&quot;&gt;Distributing malwares&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Stealing your customers data&lt;/li&gt;
  &lt;li&gt;Making your web server a zombie and using it in DDOS attacks against other targets&lt;/li&gt;
  &lt;li&gt;Mining cryptocurrencies using your web server or your visitor’s CPU power&lt;/li&gt;
  &lt;li&gt;Using your servers for running software like proxy or spammers.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can see that even if no one visits your website, security is still essential because hackers can abuse your web server against inocent targets. Or, you might receive a costly bill from your hosting service because a hacker is using too much CPU power on your server to mine cryptocurrencies.&lt;/p&gt;

&lt;h2 id=&quot;reputation-loss&quot;&gt;Reputation loss&lt;/h2&gt;

&lt;p&gt;You run a website for a reason. It could be revenue, finding a job or being creative. A hacked website impacts your reputation. Bad reputations results in less visitors, less trust and less revenue or job interviews.&lt;/p&gt;

&lt;p&gt;Besides, not having a secure website has negative SEO impact. Google and other search engines penalize websites without SSL Certificate. If your site has &lt;a href=&quot;/vulnerability-list/no-https&quot;&gt;no HTTPS&lt;/a&gt; and your competition does, Google punishes your websites, and your competitor website come up higher on Google search results than you are. Google Chrome also displays a red “Not secure” note in address bar for sites without SSL.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/no-https-chrome.jpg&quot; width=&quot;768&quot; height=&quot;351&quot; alt=&quot;Google Chrome displaying alert for non-https sites&quot; loading=&quot;lazy&quot; style=&quot;aspect-ratio: attr(width) / attr(height); height:auto;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Hacked website is a thread to visitors, so it’s no surprise to see that &lt;a href=&quot;https://www.blog.google/products/search/search-spam-report-2017/&quot;&gt;Google removes hacked website from search results&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When your website gets hacked, it can be added to specific black-lists like Google Safe Browsing list. The Safe Browsing lists—also referred to as threat lists or simply lists—are Google’s constantly updated lists of unsafe web resources. Many applications like browsers use these lists to prevent users from accessing a hacked website.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/deceptive-site-ahead.png&quot; width=&quot;768&quot; height=&quot;477&quot; alt=&quot;Google Chrome warning user about deceptive site&quot; loading=&quot;lazy&quot; style=&quot;aspect-ratio: attr(width) / attr(height); height:auto;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If your visitors get warned about security of your website, the chances are extremely low that they will buy on your website, invite you to interview or visit your site anyhow.&lt;/p&gt;

&lt;h2 id=&quot;prevention-is-better-than-cure&quot;&gt;Prevention is better than cure&lt;/h2&gt;

&lt;p&gt;OK, you got hacked! Now you have to clean up your website, restore your backup, remove your website from black-lists and inform your users. You lost your customers and revenue untill you’ve rebuilt the trust and reputation. That’s a enormous task to recover from a security incident, and it will cost you time and money.&lt;/p&gt;

&lt;p&gt;In most cases recovery and fixing a hacked website is a complex task that requires experts to do it manually, and of course it will not be for free.&lt;/p&gt;

&lt;h2 id=&quot;how-vulnerable-is-your-website&quot;&gt;How vulnerable is your website?&lt;/h2&gt;

&lt;p&gt;Hackers look for low hanging fruits. They look for high risk vulnerabilities in many websites (because any website can be usefull). Read more about hacker methods on &lt;a href=&quot;/blog/how-do-hackers-hack&quot;&gt;how hackers hack&lt;/a&gt; article.&lt;/p&gt;

&lt;p&gt;Good news is you can be like hackers. You can find holes in your website before hackers find them.&lt;/p&gt;

&lt;p&gt;Testing security of your website is easy. There are dozen of web security testing tools out there you can use for free. &lt;a href=&quot;https://www.arachni-scanner.com/&quot;&gt;Arachni&lt;/a&gt; and &lt;a href=&quot;https://w3af.org/&quot;&gt;w3af&lt;/a&gt; are famous open source security scanners you can use.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/&quot;&gt;SmartScanner&lt;/a&gt; is an AI powered web security scanner aimed to be easy to use for everyone. &lt;a href=&quot;/download&quot;&gt;Download&lt;/a&gt; and enter your website address for a free scan to find out about security of your website.&lt;/p&gt;</content><author><name></name></author><category term="Vulnerability" /><category term="Web Server" /><category term="SEO" /><category term="Wordpress" /><summary type="html">Have you ever wondered why hackers are interested in your small personal website?</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.thesmartscanner.com/assets/img/website-security.jpg" /><media:content medium="image" url="https://www.thesmartscanner.com/assets/img/website-security.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">How to Secure Your WordPress Website</title><link href="https://www.thesmartscanner.com/blog/how-to-secure-your-wordpress-website" rel="alternate" type="text/html" title="How to Secure Your WordPress Website" /><published>2022-10-31T00:00:00+00:00</published><updated>2022-10-31T00:00:00+00:00</updated><id>https://www.thesmartscanner.com/blog/how-to-secure-your-wordpress-website</id><content type="html" xml:base="https://www.thesmartscanner.com/blog/how-to-secure-your-wordpress-website">&lt;p&gt;Knowing how to secure your WordPress website can protect the site from hackers and malware. This article shows you how to implement this protection.&lt;/p&gt;

&lt;p&gt;Owning a WordPress website can be very demanding, especially if you manage it yourself. First, you have to think of the needs and preferences of your users. Second, you have to design and maintain your website in a way that encourages users to visit again and again, and helps you get other users to do the same. But equally important is the security of your WordPress website. If your website is insecure, we assure you that you will not be able to stop users from running off to more secure websites that offer the same services that you do.&lt;/p&gt;

&lt;p&gt;So, in this article, we will outline some of the ways you can secure your WordPress website. But before that, here are 5 reasons you should make the security of your WordPress Website a priority.&lt;/p&gt;

&lt;h2 id=&quot;why-you-should-secure-your-wordpress-website&quot;&gt;Why You Should Secure Your WordPress Website&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;WordPress is a fairground for malicious online activity:&lt;/strong&gt; Perhaps the best thing about building your website using WordPress is that it is the most popular content management system. The platform’s plugin integration and theme structures help website managers like you run the show without knowing all there is to know about web development. But the popularity of the platform also means that there are a lot of different individuals and virtual agents that can easily penetrate it. Similarly, because of the relative ease with which you can design websites on WordPress, there are many gaps and cracks in the framework that malware such as the &lt;a href=&quot;https://softwaretested.com/anti-malware/what-is-the-vzwpix-email-virus/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;vzwpix OR vzwpix.com email&lt;/a&gt; virus can slip through. So, securing your WordPress website helps you block these gaps.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Securing your WordPress website prevents hackers from breaking it:&lt;/strong&gt; With the evolution of technology, especially digital tech, hackers are getting smarter. Therefore, if you do not secure your website, these hackers can easily place a ‘bug’ in the backdoor of your WordPress website and do whatever they want with your users. The easiest way for hackers to operate such bugs is via your and your users’ passwords. Maybe you are better at handling passwords, but your users may not. And because some have trouble remembering difficult passwords, they use simple passwords. And hackers can easily break simple passwords. Therefore, it is your responsibility to secure your WordPress website in a way that hackers cannot access user information. &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;You don’t want Google to blacklist your website:&lt;/strong&gt; Google as a search engine has become the ultimate gatekeeper for web content management. The majority of web users rely on Google to link them up with information. To a significant extent, therefore, Google decides whether or not users can ‘mistakenly’ bump into your WordPress. And because Google likes and only promotes secure websites to users, you have to tighten the security of your website. Moreover, securing your WordPress website also means that you won’t be subject to Google’s blacklisting. This is a lot like the fictitious Santa’s Naughty and Nice list: stay on Google’s good side by securing your WordPress website or watch how fewer and fewer web users visit your website.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;You can retain and boost reputation and user trust:&lt;/strong&gt; The more secure your WordPress website is, the easier it would be to retain and boost its reputation. Much like Google’s ranking, protecting your website from virtual/cyber breachers like hackers and malware such as the &lt;a href=&quot;https://softwaretested.com/anti-malware/soap2day-virus/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;soap2day.to virus OR soap2day virus&lt;/a&gt; indicates to users that you are worthy of their trust. In return for your protection, the reputation of your website would increase and it would be much easier for you to get new visitors to the site.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Secure WordPress websites reinforce revenue:&lt;/strong&gt; Lastly, if the primary goal of your website is to earn you some money, you are significantly more likely to meet this goal when your website is secure. If your WordPress website is not secure, hackers will steal user data, users will report to Google, Google will blacklist you, fewer users will go near your website, and your goal for making money from the website will be dashed.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/wordpress-plugins.jpg&quot; width=&quot;768&quot; height=&quot;512&quot; alt=&quot;WordPress plugins&quot; loading=&quot;lazy&quot; style=&quot;aspect-ratio: attr(width) / attr(height); height:auto;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;how-to-secure-your-wordpress-website&quot;&gt;How to Secure Your WordPress Website&lt;/h2&gt;

&lt;p&gt;Having outlined some of the most important reasons for securing your WordPress website, how should you go about it?&lt;/p&gt;

&lt;h3 id=&quot;use-the-security-measures-available-on-wordpress&quot;&gt;Use the Security Measures Available on WordPress&lt;/h3&gt;

&lt;p&gt;Nobody (and nothing) knows WordPress like WordPress. The platform has many different measures that you can implement against possible breaching. Some of these measures take the form of security plugins which you can easily install on your website and never have to worry about digital cracks that hackers and their malware can slip through. As a bonus, WordPress has a robust collection of these security plugins. Some of the most popular and widely recommended plugins include iThemes Security, Patchstack, Sucuri Security, Wordfence Security, and All In One WP Security &amp;amp; Firewall. Using any one of these WordPress security plugins can help you protect the web users that visit your website from unauthorized hackers and programs.&lt;/p&gt;

&lt;h3 id=&quot;partner-with-trusted-hostingweb-management-companies&quot;&gt;Partner with Trusted Hosting/Web Management Companies&lt;/h3&gt;

&lt;p&gt;Website management is not very easy. Because of this, many website owners and managers delegate the task of managing their WordPress websites to professional agencies. But what if such agencies have malicious intentions or are digitally insecure themselves? This is why it is important to consider only agencies/agents with a trusted history of effectively managing WordPress websites. The same can be said of web hosting companies. Make sure you use only trusted hosting companies that prioritize security and take your website seriously. Usually, you have to pay a bit of money to get committed and serious hosting companies. But it is worth it, so find them online and pay them to look over your website if you cannot do so yourself.&lt;/p&gt;

&lt;h3 id=&quot;only-implement-plugins-from-trusted-developers&quot;&gt;Only Implement Plugins from Trusted Developers&lt;/h3&gt;

&lt;p&gt;In the same spirit of partnering with only trusted web management agencies and hosting companies, you have to pay attention to where the security plugins installed on your WordPress website come from. If you rely on plugins from developers that are cybercriminals in disguise, you would be jeopardizing your website and putting your users at risk. So, only use plugins from trusted and highly-rated developers. Such developers regularly update their plugins to reflect reported vulnerabilities from users and website managers. So, avoid installing plugins from developers and sources that don’t update or respond to reports of cyberattacks.&lt;/p&gt;

&lt;h3 id=&quot;use-ssl-certificates-to-lock-your-website&quot;&gt;Use SSL Certificates to Lock Your Website&lt;/h3&gt;

&lt;p&gt;Simply put, an SSL (Secure Sockets Layer) certificate is a digital encryption key that helps you secure a website. This key typically takes the form of a data file containing the public key of your website and other important information. Once you have it implemented on your website, web users will be able to tell that your website is secure—and it is. A padlock icon is the symbol to indicate to users that a website has SSL and is more secure than websites without the icon.&lt;/p&gt;

&lt;h3 id=&quot;protect-core-wordpress-files-like-the-wp-configphp-file&quot;&gt;Protect Core WordPress Files like the &lt;code&gt;wp-config.php&lt;/code&gt; File&lt;/h3&gt;

&lt;p&gt;We noted earlier that WordPress makes web development easy. As the owner/manager of a WordPress website, you have access to the files that serve as the core of the site. The &lt;code&gt;wp-config.php&lt;/code&gt; file is one such core component of your WordPress website. This file contains important information about your WordPress security keys and database connection details. So, protecting this file is tantamount to protecting the entire website. A simple way to protect this file is to hide it by moving it outside the default WordPress installation folder.&lt;/p&gt;

&lt;h3 id=&quot;regularly-update-your-wordpress-by-turning-on-auto-update&quot;&gt;Regularly Update Your WordPress by Turning on Auto-Update&lt;/h3&gt;

&lt;p&gt;Another very easy way to secure your WordPress website is to regularly update it. Much like the majority of software/web developers, no genuine digital creator wants their creation to be abused. As such, they will always progressively protect their products. This is just as true for WordPress. All you need to do, therefore, is turn on auto-update. Consequently, subsequent updates of WordPress will take care of problems such as data breaches that other web managers or users have reported.&lt;/p&gt;

&lt;h3 id=&quot;use-strong-passwords-and-require-your-users-to-do-the-same&quot;&gt;Use Strong Passwords and Require Your Users to Do the Same&lt;/h3&gt;

&lt;p&gt;There is no way we can overstate the importance of strong passwords for virtual security. Breaking your password is probably the easiest way an unauthorized person can break the security of your WordPress website. So, use strong passwords and encourage your users to do the same. You can check out password best practices such as mixing alphanumeric passwords with symbols. If you easily forget passwords, you can implement the Two-Factor Authentication (2FA) on your website. This way, users may still decide to use simple passwords but would have to verify them in a way only they can. Authenticator apps are especially useful on this front. The Google Authenticator app is one of the most popular of these apps and can help protect the integrity of your WordPress website.&lt;/p&gt;

&lt;h3 id=&quot;implement-website-lockdown-feature&quot;&gt;Implement Website Lockdown Feature&lt;/h3&gt;

&lt;p&gt;A website lockdown feature allows you to have some restrictive control over a web user’s account. The most basic application of this feature is in temporarily deactivating said account until the user can prove that the account belongs to them. So, once you implement this feature on your WordPress website, you will be able to lock down a user’s account whenever they appear to use the wrong password multiple times. You may also use plugins that send notifications to you and to the user’s email account about the repeated attempts to access the account. This will help both you and the user take immediate steps to unauthorized access to the account. Meanwhile, if it is a case of the user forgetting their password, you can implement the aforementioned 2FA solution so users don’t have to adopt and be forced to remember overly difficult passwords.&lt;/p&gt;

&lt;h3 id=&quot;use-wps-hide-login-plugin-to-reduce-the-ease-of-access-to-the-login-page&quot;&gt;Use WPS Hide Login Plugin to Reduce the Ease of Access to the Login Page&lt;/h3&gt;

&lt;p&gt;Your &lt;a href=&quot;/vulnerability-list/wordpress-login-page-found&quot;&gt;WordPress website’s login&lt;/a&gt; page is a door that unauthorized persons can use to break the security of your website. Usually, once such hackers with malicious intentions access your login page, they can also use digital brute force to break in. One such brute force method is the use of software applications that combine millions of possible username and password information and then attempt to access the administrative page. But you can protect your website against such inventions by simply renaming the login URL of your website. You can use the WPS Hide Login plugin for this. As long as you have installed and activated this plugin, hackers will not be able to easily access your login page, meaning that they will not be able to gain unauthorized access to your website.&lt;/p&gt;

&lt;h3 id=&quot;pay-attention-to-user-activity&quot;&gt;Pay Attention to User Activity&lt;/h3&gt;

&lt;p&gt;Outside the active steps you can implement to secure your WordPress website, you may also use passive methods such as regularly keeping track of user activity on your website. The easiest way to do this is to log user activity and then go through the data for possible irregularities. If a user, for example, reports their location as Canada, you should expect that their digital footprints contain that geographical tag, unless they regularly use a VPN. So, when you begin to notice a difference in location, you should pay more attention to the account and notify the user via email to verify that they are still in control. You can use WordPress’ User Activity Log plugin for this monitoring process.&lt;/p&gt;

&lt;h3 id=&quot;backup-wordpress-regularly&quot;&gt;Backup WordPress Regularly&lt;/h3&gt;

&lt;p&gt;Lastly, you should backup your WordPress regularly. This ensures that in case of a very serious breach, you have the option of returning the website to a period when it was secure. So, make sure to install and use backup plugins. You should also store the backup on reliable cloud servers. We recommend using those that require no coding so that you will not have to give your WordPress admin password to someone else to do it for you.&lt;/p&gt;

&lt;p&gt;All in all, making your WordPress website more secure is good. Using the methods outlined in this article will protect you and your users, saving you from the malicious activities of hackers and malware.&lt;/p&gt;</content><author><name>Jessica Bullet</name></author><category term="Wordpress" /><category term="Malware" /><category term="Brute Force" /><summary type="html">Knowing how to secure your WordPress website can protect the site from hackers and malware. This article shows you how to implement this protection.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.thesmartscanner.com/assets/img/wordpress-security.jpg" /><media:content medium="image" url="https://www.thesmartscanner.com/assets/img/wordpress-security.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Update Cheat Sheet for Developers</title><link href="https://www.thesmartscanner.com/blog/update-cheat-sheet-for-developers" rel="alternate" type="text/html" title="Update Cheat Sheet for Developers" /><published>2022-09-11T00:00:00+00:00</published><updated>2022-09-11T00:00:00+00:00</updated><id>https://www.thesmartscanner.com/blog/update-cheat-sheet-for-developers-</id><content type="html" xml:base="https://www.thesmartscanner.com/blog/update-cheat-sheet-for-developers">&lt;p&gt;Using an outdated application is a high-risk vulnerability that has an easy fix. This guide provides easy-to-follow instructions for different applications to fix security vulnerabilities.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;⚠️ The goal of this guide is to eliminate vulnerabilities by updating applications. Sometimes updates can break things or lead to unexpected behaviors. It is up to you to perform enough checking and testing before using commands in this cheat sheet in the production environment.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let’s see how to update different environments.&lt;/p&gt;

&lt;h2 id=&quot;rhelcentosoracle-linux&quot;&gt;RHEL/CentOS/Oracle Linux&lt;/h2&gt;
&lt;p&gt;Run below command in terminal (ssh)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo yum update
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;debianubuntu-linux&quot;&gt;Debian/Ubuntu Linux&lt;/h2&gt;
&lt;p&gt;Run below command in terminal (ssh)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt update &amp;amp;&amp;amp; sudo apt upgrade
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;opensusesuse-linux&quot;&gt;OpenSUSE/SUSE Linux&lt;/h2&gt;
&lt;p&gt;Run below command in terminal (ssh)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo zypper up
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;nodejs-npm&quot;&gt;NodeJs (npm)&lt;/h2&gt;
&lt;p&gt;Run the below command in your NodeJs project directory.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm audit fix
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that some vulnerabilities cannot be fixed automatically and will require manual intervention or review.
Some fixes can be forced using the below command but please make sure it doesn’t break anything in your project.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm audit fix --force
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;python-pip&quot;&gt;Python (pip)&lt;/h2&gt;
&lt;p&gt;You have to update packages one by one. Run the below command to get a list of outdated packages.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pip list --outdated
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For each package run the below command to update it.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pip install [package_name] --upgrade
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;nuget&quot;&gt;NuGet&lt;/h2&gt;
&lt;p&gt;From the command line, you can update packages in the solution to the latest version available from nuget.org.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nuget update YourSolution.sln
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that this will not run any PowerShell scripts in any NuGet packages.&lt;/p&gt;

&lt;p&gt;From within Visual Studio, you can use the &lt;a href=&quot;http://docs.nuget.org/docs/reference/package-manager-console-powershell-reference&quot;&gt;Package Manager Console&lt;/a&gt; to also update the packages. This has the benefit that any PowerShell scripts will be run as part of the update whereas using NuGet.exe will not run them. The following command will update all packages in every project to the latest version available from nuget.org.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Update-Package
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;php-composer&quot;&gt;PHP (Composer)&lt;/h2&gt;
&lt;p&gt;Navigate to the root of your application, where your &lt;code&gt;composer.json&lt;/code&gt; file is, and run the below command.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;php composer.phar update
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In Windows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;composer update
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;go-golang&quot;&gt;Go (golang)&lt;/h2&gt;
&lt;p&gt;To update all packages in your &lt;code&gt;GOPATH&lt;/code&gt;, run the below command.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;go get -u all
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;ruby-gem&quot;&gt;Ruby (gem)&lt;/h2&gt;
&lt;p&gt;To update all gems:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gem update
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;RubyGems keeps old versions of gems. Run cleanup to remove old gems after an update.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gem cleanup
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;maven-mvn&quot;&gt;Maven (mvn)&lt;/h2&gt;
&lt;p&gt;Run the below command to force an update of dependencies.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mvn clean install -U
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;rust-cargo&quot;&gt;Rust (cargo)&lt;/h2&gt;
&lt;p&gt;For updating all dependencies of your Rust project, you need to install a third-party crate. Install &lt;code&gt;cargo-update&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cargo install cargo-update
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then run the below command to check for newer versions and update all installed packages.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cargo install-update -a
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;wordpress&quot;&gt;WordPress&lt;/h2&gt;
&lt;p&gt;WordPress lets you update with the click of a button. You can launch the update by clicking the link in the new version banner (if it’s there) or by going to the Dashboard &amp;gt; Updates screen. Once you are on the &lt;em&gt;“Update WordPress”&lt;/em&gt; page, click the button &lt;em&gt;“Update Now”&lt;/em&gt; to start the process off. You shouldn’t need to do anything else and, once it’s finished, you will be up-to-date.&lt;/p&gt;

&lt;h2 id=&quot;windows&quot;&gt;Windows&lt;/h2&gt;
&lt;p&gt;Run the below command on &lt;code&gt;cmd&lt;/code&gt; to open the Windows update screen.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;control update
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This document is a &lt;a href=&quot;https://github.com/TheSmartScanner/update-everyhitng&quot;&gt;GitHub project&lt;/a&gt; and contributions are most welcome.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.npmjs.com/cli/v8/commands/npm-audit&quot;&gt;npm-audit&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://wordpress.org/support/article/updating-wordpress/&quot;&gt;Updating WordPress&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/a/6882750&quot;&gt;stackoverflow.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/a/10383783&quot;&gt;stackoverflow.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/a/40982333&quot;&gt;stackoverflow.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="npm" /><category term="NodeJs" /><category term="Unix" /><category term="Python" /><category term="NuGet" /><category term="PHP" /><category term="Go" /><category term="Ruby" /><category term="Gem" /><category term="Maven" /><category term="mvn" /><category term="Rust" /><category term="Composer" /><category term="Wordpress" /><summary type="html">How to keep your project packages and development environment update to date.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.thesmartscanner.com/assets/img/system-update.jpg" /><media:content medium="image" url="https://www.thesmartscanner.com/assets/img/system-update.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">SmartScanner Version 1.15 Released</title><link href="https://www.thesmartscanner.com/blog/smartscanner-v1-15-released" rel="alternate" type="text/html" title="SmartScanner Version 1.15 Released" /><published>2022-08-01T00:00:00+00:00</published><updated>2022-08-01T00:00:00+00:00</updated><id>https://www.thesmartscanner.com/blog/smartscanner-v1-15-released</id><content type="html" xml:base="https://www.thesmartscanner.com/blog/smartscanner-v1-15-released">&lt;p&gt;JSON report and better dynamic javascript evaluations added.&lt;/p&gt;

&lt;p&gt;Modern web applications heavily depend on front-end JavaScript functionalities. JavaScript is used for creating reactive content, validating forms, and performing different actions. 
SmartScanner has a built-in module to interpret JavaScript on web pages, so it can submit forms and crawl the website. In this version, new changes have been deployed to add support for the Javascript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API&quot;&gt;Fetch&lt;/a&gt; API.
This feature improves SmartScanner’s capability for covering all the contents and resources in websites using AJAX and new frameworks like ReactJS, Vue.js, and Angular.&lt;/p&gt;

&lt;p&gt;Below are major changes in this version.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Improved dynamic JavaScript evaluation module for &lt;strong&gt;full capturing of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API&quot;&gt;Fetch&lt;/a&gt; API&lt;/strong&gt;, supporting all HTTP methods and custom headers.&lt;/li&gt;
  &lt;li&gt;In addition to PDF reports, now you can export scan results in &lt;strong&gt;JSON format&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Minor improvements and bug fixes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;/download&quot;&gt;Download SmartScanner free&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Read the &lt;a href=&quot;/docs/changelog&quot;&gt;changelog&lt;/a&gt; for details of new changes.&lt;/p&gt;</content><author><name></name></author><category term="Release" /><category term="JSON" /><category term="JavaScript" /><category term="React" /><category term="Vue" /><category term="Angular" /><category term="AJAX" /><summary type="html">JSON report and better dynamic javascript evaluations added.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.thesmartscanner.com/assets/img/smartscanner-v1-15.webp" /><media:content medium="image" url="https://www.thesmartscanner.com/assets/img/smartscanner-v1-15.webp" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">CSRF, XXE, and 12 Other Security Acronyms Explained</title><link href="https://www.thesmartscanner.com/blog/csrf-xxe-and-12-other-security-acronyms-explained" rel="alternate" type="text/html" title="CSRF, XXE, and 12 Other Security Acronyms Explained" /><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><id>https://www.thesmartscanner.com/blog/csrf-xxe-and-12-other-security-acronyms-explained</id><content type="html" xml:base="https://www.thesmartscanner.com/blog/csrf-xxe-and-12-other-security-acronyms-explained">&lt;p&gt;Acronyms are shortcuts, and we love using them, specially the catchy ones! Let’s decipher some commonly used acronyms in the cyber security industry.&lt;/p&gt;

&lt;h2 id=&quot;owasp&quot;&gt;OWASP&lt;/h2&gt;
&lt;p&gt;The &lt;strong&gt;Open Web Application Security Project (OWASP)&lt;/strong&gt; is a nonprofit foundation that works to improve the security of software. The OWASP Top 10 is one their popular projects.&lt;/p&gt;

&lt;h2 id=&quot;xss&quot;&gt;XSS&lt;/h2&gt;
&lt;p&gt;It stands for &lt;strong&gt;Cross-Site Scripting&lt;/strong&gt;. An X is used instead of the C to prevent confusion with Cascading Style Sheets (CSS).&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;/vulnerability-list/cross-site-scripting&quot;&gt;Read more about Cross-Site Scripting vulnerability&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;sqli&quot;&gt;SQLI&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;SQL Injection&lt;/strong&gt;, is an attack where the SQL commands used in an application are manipulated by attacker. SQLI is a dangerous and common vulnerability. &lt;a href=&quot;/&quot;&gt;Find SQL Injection on your website&lt;/a&gt; with SmartScanner now.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;/vulnerability-list/sql-injection&quot;&gt;Read more about SQL Injection vulnerability&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;rce&quot;&gt;RCE&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Remote Command Execution&lt;/strong&gt; (RCE) is a high-risk vulnerability. It can occur anywhere from routers to online shops. By exploiting RCE, an attacker can execute commands (usually OS commands) on the target system.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;/vulnerability-list/os-command-execution&quot;&gt;Read more about Remote Command Execution vulnerability&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;dos-and-ddos&quot;&gt;DoS and DDos&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Denial of Service&lt;/strong&gt; (DoS) is a famous security acronym. You might have heard it at the news. DoS is a type of attack that makes the target service unavailable. Attackers usually perform DoS attacks by sending enormous traffic to the target.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Distributed Denial of Service&lt;/strong&gt; (DDoS) is a DoS attack from many different sources. This type of DoS typically runs using zombie botnets.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/service-unavailable-due-to-dos-attack.png&quot; width=&quot;648&quot; height=&quot;361&quot; alt=&quot;Results of a DoS attack&quot; loading=&quot;lazy&quot; style=&quot;aspect-ratio: attr(width) / attr(height); height:auto;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;csrf&quot;&gt;CSRF&lt;/h2&gt;
&lt;p&gt;CSRF (pronounce Sea Surf) stands for &lt;strong&gt;Cross-Site Request Forgery&lt;/strong&gt;. CSRF (aka XSRF) is an attack where the attacker sends a request on behalf of a victim user without her knowledge. Attackers exploit CSRF to do actions using the victim’s permission. For example, a hacker can create an admin user for himself using a CSRF attack.&lt;/p&gt;

&lt;h2 id=&quot;xxe&quot;&gt;XXE&lt;/h2&gt;
&lt;p&gt;An &lt;strong&gt;XML External Entity&lt;/strong&gt; attack is a kind of attack against an application that parses XML input. In this attack, the vulnerable application processes a reference to an external entity in the provided XML. The XXE is a dangerous attack that can lead to information disclosure or denial of service attacks.&lt;/p&gt;

&lt;h2 id=&quot;ssrf&quot;&gt;SSRF&lt;/h2&gt;
&lt;p&gt;In a &lt;strong&gt;Server-Side Request Forgery&lt;/strong&gt; (SSRF) attack, the attacker can abuse functionality on the server to read or update internal resources.&lt;/p&gt;

&lt;h2 id=&quot;ssi&quot;&gt;SSI&lt;/h2&gt;
&lt;p&gt;A &lt;strong&gt;Server-Side Includes Injection&lt;/strong&gt; is a type of security attack that exploits the Service-side Includes features of a web server. The &lt;em&gt;Server-side includes&lt;/em&gt; are tags in HTML files. The web server executes these tags to add dynamic contents to the page before sending it to the user.&lt;/p&gt;

&lt;h2 id=&quot;rfi&quot;&gt;RFI&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Remote File Inclusion&lt;/strong&gt; (RFI) occurs when the web application downloads and executes a remote file. This remote file is usually controlled by an attacker and is passed as a request parameter.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;/vulnerability-list/remote-file-inclusion&quot;&gt;Read more about Remote File Inclusion vulnerability&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;lfi--lfd&quot;&gt;LFI / LFD&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Local File Inclusion&lt;/strong&gt; (LFI) is similar to a remote file inclusion vulnerability, but only local files on the server can be included for execution. It does not mean the LFI is less dangerous than RFI.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/path-traversal-variations.png&quot; width=&quot;640&quot; height=&quot;362&quot; alt=&quot;Path Traversal and File Inclusion Payloads&quot; loading=&quot;lazy&quot; style=&quot;aspect-ratio: attr(width) / attr(height); height:auto;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;When the local file is only opened and sent back to the user (or attacker), it is called &lt;strong&gt;Local File Download&lt;/strong&gt; or &lt;strong&gt;Disclosure&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;/vulnerability-list/local-file-inclusion&quot;&gt;Read more about Local File Inclusion&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;idor&quot;&gt;IDOR&lt;/h2&gt;
&lt;p&gt;IDOR stands for &lt;strong&gt;Insecure Direct Object Reference&lt;/strong&gt;. It is a vulnerability that occurs when a reference to an internal object, such as a file or directory, is retrieved from user-supplied input. If no proper authorization is implemented, an attacker can abuse this reference to access every object.&lt;/p&gt;

&lt;h2 id=&quot;cve&quot;&gt;CVE&lt;/h2&gt;
&lt;p&gt;The &lt;strong&gt;Common Vulnerabilities and Exposures&lt;/strong&gt; (CVE) system provides a mechanism for referencing publicly known security vulnerabilities.&lt;/p&gt;

&lt;h2 id=&quot;cwe&quot;&gt;CWE&lt;/h2&gt;
&lt;p&gt;The &lt;strong&gt;Common Weakness Enumeration&lt;/strong&gt; (CWE) is a category system for hardware and software weaknesses and vulnerabilities.&lt;/p&gt;</content><author><name></name></author><category term="XSS" /><category term="SQLI" /><category term="RCE" /><category term="DOS" /><category term="CSRF" /><category term="XXE" /><category term="SSRF" /><category term="SSI" /><category term="RFI" /><category term="LFI" /><category term="LFD" /><category term="CVE" /><category term="CWE" /><category term="DDoS" /><category term="Vulnerability" /><category term="Exploit" /><summary type="html">Acronyms are shortcuts, and we love using them, specially the catchy ones! Let’s decipher some commonly used acronyms in the cyber security industry.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.thesmartscanner.com/assets/img/security-acronym-cheat-sheet-small.png" /><media:content medium="image" url="https://www.thesmartscanner.com/assets/img/security-acronym-cheat-sheet-small.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">10 Secure Coding Best Practices to Follow in Every Project</title><link href="https://www.thesmartscanner.com/blog/10-secure-coding-best-practices-to-follow-in-every-project" rel="alternate" type="text/html" title="10 Secure Coding Best Practices to Follow in Every Project" /><published>2022-06-11T00:00:00+00:00</published><updated>2022-06-11T00:00:00+00:00</updated><id>https://www.thesmartscanner.com/blog/10-secure-coding-best-practices-to-follow-in-every-project</id><content type="html" xml:base="https://www.thesmartscanner.com/blog/10-secure-coding-best-practices-to-follow-in-every-project">&lt;p&gt;Let’s see how we can make more secure software.&lt;/p&gt;

&lt;h2 id=&quot;update-update-update&quot;&gt;Update, Update, Update!&lt;/h2&gt;
&lt;p&gt;Using vulnerable and outdated components with known vulnerabilities has always been in the &lt;a href=&quot;https://owasp.org/www-project-top-ten/&quot;&gt;OWASP Top 10 Application Security Risks&lt;/a&gt;. You can take a giant leap in securing your projects only if you use up-to-date tools and libraries.&lt;/p&gt;

&lt;h2 id=&quot;stick-to-standards&quot;&gt;Stick to Standards&lt;/h2&gt;
&lt;p&gt;If you have the &lt;a href=&quot;https://en.wikipedia.org/wiki/Not_invented_here&quot;&gt;&lt;em&gt;Not invented here (NIH)&lt;/em&gt;&lt;/a&gt; syndrome, you prefer to develop everything from scratch. That’s fine if you have the time and money to do so. But building major things like cryptography and web servers from scratch needs a lot of skills and effort. Such complex components cannot be built by a single person. Even if you have made one, you should not use it in production without in-depth reviews from many other people.&lt;/p&gt;

&lt;p&gt;In design and architecture concepts, you should do the same. You should follow best practices to benefit from the community experience.&lt;/p&gt;

&lt;p&gt;Next time instead of introducing your own hash algorithm, use one of the &lt;a href=&quot;https://en.wikipedia.org/wiki/Cryptographic_hash_function#Cryptographic_hash_algorithms&quot;&gt;well-known hash functions&lt;/a&gt; implemented by an open-source and peer-reviewed library.&lt;/p&gt;

&lt;h2 id=&quot;use-trustworthy-packages&quot;&gt;Use Trustworthy Packages&lt;/h2&gt;
&lt;p&gt;One significant risk of using third-party modules (like packages in npm, PyPI, NuGet, etc. ) is the &lt;em&gt;Supply Chain Attack&lt;/em&gt;. Consider one of your project’s dependencies goes rogue and doesn’t do what it was supposed to do. It is called a supply chain attack. This has happened for popular npm packages (UA-Parser-JS, COA, and RC), and it can happen for many others.&lt;/p&gt;

&lt;p&gt;We know that using third-party packages is inevitable. So, here are a few tips to consider before choosing a third-party library.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Prefer packages with more contributions (more contributors, commits, pull requests, and stars)&lt;/li&gt;
  &lt;li&gt;Prefer packages with less open issues&lt;/li&gt;
  &lt;li&gt;Prefer packages with higher release frequency&lt;/li&gt;
  &lt;li&gt;Use dependency scanners like &lt;a href=&quot;https://docs.github.com/en/code-security/dependabot/dependabot-security-updates/configuring-dependabot-security-updates&quot;&gt;GitHub Dependabot&lt;/a&gt; to find vulnerable packages.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;never-trust-user&quot;&gt;Never Trust User&lt;/h2&gt;
&lt;p&gt;Always validate data received from user input before processing them. Check the length, type, allowed characters, and data pattern before using it.&lt;/p&gt;

&lt;p&gt;The essential thing in user validation is to do it where the user cannot manipulate the logic. For example, the user has complete control over a webpage, so checking if the user entered a correct email address on the client is not enough, and you should validate it on the back-end again.&lt;/p&gt;

&lt;h2 id=&quot;always-encode-output&quot;&gt;Always Encode Output&lt;/h2&gt;
&lt;p&gt;Always use proper encoding when displaying data to the user. The encoding depends on the context you display the data within.
For example, data on a web page should be HTML-Encoded, and data in URL should be URL-Encoded. Other contexts like CSV, XML, JSON files, or email need unique encodings.&lt;/p&gt;

&lt;h2 id=&quot;catch-exceptions&quot;&gt;Catch Exceptions&lt;/h2&gt;
&lt;p&gt;Exceptions happen! We should be prepared for them. Unhandled errors create security issues like failing insecurely or &lt;a href=&quot;/vulnerability-list/detailed-application-and-database-error&quot;&gt;revealing sensitive information&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Always assume things will break eventually and get prepared for it.&lt;/p&gt;

&lt;h2 id=&quot;do-not-write-secrets-in-comments&quot;&gt;Do not Write Secrets in Comments&lt;/h2&gt;
&lt;p&gt;When you put comments in the code, it means your code is not clear and expressive enough and needs explanation. So, a better title for this section would be &lt;em&gt;Do not Write Comments&lt;/em&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;“Comments are always failures.”&lt;/em&gt;
— Robert C. Martin @ Clean Code&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There are some valid use-cases for comments in the code, but writing operational information and sensitive data like passwords are not one of them.&lt;/p&gt;

&lt;h2 id=&quot;use-linter&quot;&gt;Use Linter&lt;/h2&gt;
&lt;p&gt;Linters can analyze your code and enforce particular rules. Linters assist you in finding errors, bugs, code smells, and suspicious expressions like using &lt;code&gt;eval&lt;/code&gt; and dangerous regular expressions.&lt;/p&gt;

&lt;h2 id=&quot;possess-an-open-source-spirit&quot;&gt;Possess an Open-Source Spirit&lt;/h2&gt;
&lt;p&gt;Open source projects are maintained by the community. It means their structure is not specific to a single user’s environment. Open source projects (usually) don’t have any hard-coded passwords or internal IP addresses. These are good practices we can follow in our projects.&lt;/p&gt;

&lt;p&gt;Not every project is supposed to be open-source and publicly available. But we should prepare all projects for open sourcing. Here are a few things to start:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Remove hard-coded passwords, IP addresses, and database connection strings, …&lt;/li&gt;
  &lt;li&gt;Load all configurations from environment variables&lt;/li&gt;
  &lt;li&gt;Add a &lt;code&gt;readme.md&lt;/code&gt; file to your project and document build and test instructions.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;write-clean-code&quot;&gt;Write Clean Code&lt;/h2&gt;
&lt;p&gt;A clean code is inherently more secure. From a security point of view, a clear code has many benefits:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A clear code has fewer opportunities for vulnerabilities to occur because they’re less complex&lt;/li&gt;
  &lt;li&gt;Reviewing and finding vulnerabilities in a clear code is easier&lt;/li&gt;
  &lt;li&gt;It takes less time and effort to fix a vulnerability in a clear code&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can read the &lt;a href=&quot;https://www.google.com/books/edition/_/hjEFCAAAQBAJ&quot;&gt;Clean Code&lt;/a&gt; book (if you haven’t read it already) and start refactoring your codes.&lt;/p&gt;</content><author><name></name></author><category term="npm" /><category term="Supply Chain Attack" /><category term="OWASP" /><category term="PyPI" /><category term="Development" /><summary type="html">Let’s see how we can make more secure software.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.thesmartscanner.com/assets/img/secure-coding-best-practice.jpg" /><media:content medium="image" url="https://www.thesmartscanner.com/assets/img/secure-coding-best-practice.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Test Apache Tomcat and Apache Struts Vulnerabilities with SmartScanner 1-14</title><link href="https://www.thesmartscanner.com/blog/test-apache-tomcat-and-apache-struts-vulnerabilities-with-smartscanner-1-14" rel="alternate" type="text/html" title="Test Apache Tomcat and Apache Struts Vulnerabilities with SmartScanner 1-14" /><published>2022-06-06T00:00:00+00:00</published><updated>2022-06-06T00:00:00+00:00</updated><id>https://www.thesmartscanner.com/blog/test-apache-tomcat-and-apache-struts-vulnerabilities-with-smartscanner-1-14</id><content type="html" xml:base="https://www.thesmartscanner.com/blog/test-apache-tomcat-and-apache-struts-vulnerabilities-with-smartscanner-1-14">&lt;p&gt;SmartScanner version 1.14 released. It now can scan Apache Tomcat/Struts and Java vulnerabilities.&lt;/p&gt;

&lt;p&gt;This version is just a start for adding tests for Apache Tomcat and Apache Struts. We’ll continue adding new tests for Apache projects in future versions.&lt;/p&gt;

&lt;p&gt;Below are major changes in this release.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Apache Tomcat&lt;/strong&gt; and &lt;strong&gt;Apache Struts&lt;/strong&gt; detection&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Java runtime error detection&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;4 Vulnerabilities for Apache Struts&lt;/li&gt;
  &lt;li&gt;3 Vulnerabilities for Apache Tomcat&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;/download&quot;&gt;Download SmartScanner free&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Read the &lt;a href=&quot;/docs/changelog&quot;&gt;changelog&lt;/a&gt; for details of new changes.&lt;/p&gt;</content><author><name></name></author><category term="Release" /><category term="Apache" /><category term="Tomcat" /><summary type="html">SmartScanner version 1.14 released. It now can scan Apache Tomcat/Struts and Java vulnerabilities.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.thesmartscanner.com/assets/img/smartscanner-v1-14.webp" /><media:content medium="image" url="https://www.thesmartscanner.com/assets/img/smartscanner-v1-14.webp" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>